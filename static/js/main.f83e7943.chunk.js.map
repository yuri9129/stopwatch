{"version":3,"sources":["index.js"],"names":["playerList","Timer","props","state","myTime","intervalId","time","second","minute","hour","alert","playerId","limit","handleSetLimit","bind","this","setInterval","update","setState","startTime","Date","getTime","nowTime","clearInterval","elapsed","Math","floor","nowPlayerId","nextPlayerId","length","event","target","value","className","onClick","handleChange","Buttons","onClickStart","handleStart","onClickStop","handleStop","Setting","onChangeLimit","React","Component","name","onChange","Board","ReactDOM","render","document","getElementById"],"mappings":"oOAIIA,EAAa,CACf,WACA,YAGIC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,KACRC,WAAa,KACbC,KAAK,CACHC,OAAO,EACPC,OAAO,EACPC,KAAK,GAEPC,OAAO,EACPC,SAAS,KACTC,MAAO,IAET,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBAdL,E,+CAiBnB,WAAe,IAAD,OACZ,GAA6B,OAA1BC,KAAKZ,MAAME,WAAd,CAGA,IAAIA,EAAaW,aAAY,WAC3B,EAAKC,WACJ,KACHF,KAAKG,SAAS,CACZC,WAAW,IAAIC,MAAOC,UACtBC,SAAS,IAAIF,MAAOC,UACpBV,SAAU,EACVL,KAAK,CACHC,OAAO,EACPC,OAAO,EACPC,KAAK,GAEPC,OAAO,EACPL,WAAYA,O,wBAIhB,WACEkB,cAAcR,KAAKZ,MAAME,YACzBU,KAAKG,SAAS,CACZb,WAAY,S,oBAIhB,WACE,IAEMmB,GAFM,IAAIJ,MAAOC,UACTN,KAAKZ,MAAMgB,UAErBZ,EAASkB,KAAKC,MAAMF,EAAU,IAAO,IACrChB,EAASiB,KAAKC,MAAMF,EAAU,IAAO,GAAK,IAC1Cf,EAASgB,KAAKC,MAAMF,EAAU,IAAO,GAAK,IAC1Cd,GAAQ,EACTc,GAA8B,IAAnBT,KAAKZ,MAAMS,QACvBF,GAAQ,EACRa,cAAcR,KAAKZ,MAAME,aAE3BU,KAAKG,SAAS,CACZZ,KAAK,CACHC,SACAC,SACAC,QAEFC,Y,0BAIJ,WAAe,IAAD,OACZa,cAAcR,KAAKZ,MAAME,YAEzB,IAAMsB,EAAcZ,KAAKZ,MAAMQ,SAC3BiB,EAAgC,OAAhBD,GACdA,EAAc,GAAK3B,EAAW6B,OADQ,EACMF,EAAc,EAC5DtB,EAAaW,aAAY,WAC3B,EAAKC,WACJ,KAEHF,KAAKG,SAAS,CACZC,WAAW,IAAIC,MAAOC,UACtBC,SAAS,IAAIF,MAAOC,UACpBf,KAAK,CACHC,OAAO,EACPC,OAAO,EACPC,KAAK,GAEPE,SAAUiB,EACVvB,WAAYA,EACZK,OAAO,M,4BAIX,SAAeoB,GACbf,KAAKG,SAAS,CACZN,MAAOkB,EAAMC,OAAOC,U,oBAKxB,WAAS,IAAD,OACFC,EAAYlB,KAAKZ,MAAMO,MAAQ,QAAU,GAC7C,OACE,gCACE,8BAC2B,OAAxBK,KAAKZ,MAAMQ,SAAoBX,EAAWe,KAAKZ,MAAMQ,UAAY,MAEpE,8BACE,yBACEsB,UAAW,eAAiBA,EAC5BC,QAAS,kBAAM,EAAKC,gBAFtB,UAIGpB,KAAKZ,MAAMG,KAAKG,KAJnB,IAI0BM,KAAKZ,MAAMG,KAAKE,OAJ1C,IAImDO,KAAKZ,MAAMG,KAAKC,YAGrE,cAAC6B,EAAD,CACEC,aAAc,kBAAM,EAAKC,eACzBC,YAAa,kBAAM,EAAKC,gBAE1B,cAACC,EAAD,CACE7B,MAAOG,KAAKZ,MAAMS,MAClB8B,cAAe3B,KAAKF,wB,GAxHV8B,IAAMC,WA+HpBR,E,4JACJ,WAAS,IAAD,OACN,OACE,8BAEE,wBAAQF,QAAS,kBAAM,EAAKhC,MAAMqC,eAAlC,wB,GALcI,IAAMC,WAUtBH,E,4JACJ,WACE,OACE,8BACE,uBAAOI,KAAK,QAAQb,MAAOjB,KAAKb,MAAMU,MAAOkC,SAAU/B,KAAKb,MAAMwC,sB,GAJpDC,IAAMC,WAUtBG,E,4JACJ,WACE,OACE,8BACE,cAAC9C,EAAD,U,GAJY0C,IAAMC,WAU1BI,IAASC,OACP,cAACF,EAAD,IACAG,SAASC,eAAe,W","file":"static/js/main.f83e7943.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nlet playerList = [\r\n  'player 1',\r\n  'player 2',\r\n];\r\n\r\nclass Timer extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      myTime: null,\r\n      intervalId : null,\r\n      time:{\r\n        second:0,\r\n        minute:0,\r\n        hour:0,\r\n      },\r\n      alert: false,\r\n      playerId:null,\r\n      limit: 30\r\n    };\r\n    this.handleSetLimit = this.handleSetLimit.bind(this);\r\n  }\r\n\r\n  handleStart() {\r\n    if(this.state.intervalId !== null){\r\n      return;\r\n    }\r\n    let intervalId = setInterval(() => {\r\n      this.update();\r\n    }, 1000);\r\n    this.setState({\r\n      startTime: new Date().getTime(),\r\n      nowTime: new Date().getTime(),\r\n      playerId: 0,\r\n      time:{\r\n        second:0,\r\n        minute:0,\r\n        hour:0,\r\n      },\r\n      alert: false,\r\n      intervalId: intervalId,\r\n    })\r\n  }\r\n\r\n  handleStop(){\r\n    clearInterval(this.state.intervalId);\r\n    this.setState({\r\n      intervalId: null\r\n    });\r\n  }\r\n\r\n  update(){\r\n    const now = new Date().getTime();\r\n    const start = this.state.startTime;\r\n    const elapsed = now - start;\r\n    let second = Math.floor(elapsed / 1000 % 60);\r\n    let minute = Math.floor(elapsed / 1000 / 60 % 60);\r\n    let hour   = Math.floor(elapsed / 1000 / 60 / 60);\r\n    let alert = false;\r\n    if(elapsed >= this.state.limit * 1000){\r\n      alert = true;\r\n      clearInterval(this.state.intervalId);\r\n    }\r\n    this.setState({\r\n      time:{\r\n        second,\r\n        minute,\r\n        hour,\r\n      },\r\n      alert\r\n    })\r\n  }\r\n\r\n  handleChange(){\r\n    clearInterval(this.state.intervalId);\r\n\r\n    const nowPlayerId = this.state.playerId;\r\n    let nextPlayerId = (nowPlayerId === null) ? 0\r\n      : ((nowPlayerId + 1 >= playerList.length) ? 0 : nowPlayerId + 1);\r\n    let intervalId = setInterval(() => {\r\n      this.update();\r\n    }, 1000);\r\n\r\n    this.setState({\r\n      startTime: new Date().getTime(),\r\n      nowTime: new Date().getTime(),\r\n      time:{\r\n        second:0,\r\n        minute:0,\r\n        hour:0,\r\n      },\r\n      playerId: nextPlayerId,\r\n      intervalId: intervalId,\r\n      alert: false,\r\n    })\r\n  }\r\n\r\n  handleSetLimit(event){\r\n    this.setState({\r\n      limit: event.target.value\r\n    });\r\n  }\r\n\r\n\r\n  render(){\r\n    let className = this.state.alert ? 'alert' : '';\r\n    return (\r\n      <div>\r\n        <div>\r\n          {this.state.playerId !== null ? playerList[this.state.playerId] : '-'}\r\n        </div>\r\n        <div>\r\n          <button\r\n            className={\"timer_button\" + className}\r\n            onClick={() => this.handleChange()}\r\n          >\r\n            {this.state.time.hour}:{this.state.time.minute}:{this.state.time.second}\r\n          </button>\r\n        </div>\r\n        <Buttons\r\n          onClickStart={() => this.handleStart()}\r\n          onClickStop={() => this.handleStop()}\r\n        />\r\n        <Setting\r\n          limit={this.state.limit}\r\n          onChangeLimit={this.handleSetLimit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Buttons extends React.Component{\r\n  render(){\r\n    return (\r\n      <div>\r\n        {/*<button onClick={() => this.props.onClickStart()}>START</button>*/}\r\n        <button onClick={() => this.props.onClickStop()}>Stop</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass Setting extends React.Component{\r\n  render(){\r\n    return (\r\n      <div>\r\n        <input name=\"limit\" value={this.props.limit} onChange={this.props.onChangeLimit}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Timer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Board/>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}